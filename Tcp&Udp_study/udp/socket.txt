socket（套接字）是进程间通信的一种方式：
发送数据：
1.创建套接字
2.使用套接字收发数据
3.关闭套接字
import socket
def main():
      #创建udp的套接字
      udp_socket=socket.socket(socket.AF_INET,socket.SOCK_DGRAM)
      #端口绑定了就是绑定的端口号，否则发送方的端口号是随机绑定的
      udp_socket.bind(("",7890))
      while True:
            #准备接收方的地址
            #'192.168.1.123'表示目的ip地址
            #8080表示目的端口 是元组
            dest_addr=('192.168.244.1',8080)
            send_data=input("请输入要发送的数据：")
            if send_data == "exit":
                  break
            udp_socket.sendto(send_data.encode("utf-8"),dest_addr)
      #关闭套接字
      udp_socket.close()
  
if __name__=='__main__':
      main()
	  
接收数据：（必须绑定接收方的端口号）
接收数据：
1.创建套接字
2.绑定本地自己的信息（ip和port）
3.接收数据
4.关闭套接字
from socket import *

def main():
        #1.创建套接字
        udp_socket = socket(AF_INET,SOCK_DGRAM)
        #2.绑定本地的相关信息，如果一个网络程序不绑定，则系统会随机分配
        local_addr = ("", 7888)
        udp_socket.bind(local_addr)
        while True:
                #3.等待接受双方发送的数据
                #1024最大字节
                recv_data=udp_socket.recvfrom(1024)
                #recv_data是元组（接受的数据，发送方的ip,端口）
                print(recv_data[0].decode('gbk'))
        #关闭套接字
        udp_socket.close()

if __name__== "__main__":
    main()
